{"version":3,"sources":["components/drawer/Profile.jsx","components/drawer/Drawer.jsx","components/chat/menu/HeaderMenu.jsx","constants/data.js","components/chat/menu/Header.jsx","components/chat/menu/Search.jsx","service/api.js","components/chat/menu/Conversation.jsx","components/chat/menu/Conversations.jsx","components/chat/menu/Menu.jsx","components/chat/chat/ChatHeader.jsx","components/chat/chat/Message.jsx","components/chat/chat/Footer.jsx","components/chat/chat/Messages.jsx","components/chat/chat/ChatBox.jsx","components/chat/chat/EmptyChat.jsx","components/chat/ChatDialog.jsx","components/account/LoginDialog.jsx","components/Messenger.jsx"],"names":["useStyles","makeStyles","imageContainer","display","justifyContent","profilePicture","width","height","borderRadius","padding","nameContainer","background","boxShadow","fontSize","color","margin","description","Profile","classes","account","useContext","AccountContext","Box","className","src","imageUrl","alt","Typography","name","header","marginTop","fontWeight","component","InfoDrawer","open","setOpen","profile","Drawer","onClose","ArrowBack","onClick","useStyle","menuItem","logout","border","HeaderMenu","useState","openDrawer","setOpenDrawer","setAccount","setShowloginButton","showlogoutButton","setShowlogoutButton","setPerson","UserContext","handleClose","MoreVert","event","currentTarget","anchorEl","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","clientId","buttonText","onLogoutSuccess","alert","console","clear","alignItems","chatIcons","marginLeft","marginRight","avatar","Header","theme","transition","search","position","backgroundColor","searchIcon","spacing","inputRoot","inputInput","paddingLeft","Search","setText","InputBase","placeholder","root","input","inputProps","onChange","e","target","value","url","addUser","data","a","axios","post","response","log","getUsers","get","setConversation","getConversation","users","getMessages","id","newMessages","cursor","displayPicture","objectFit","container","timestamp","text","Conversation","user","newMessageFlag","socket","message","setMessage","useEffect","sender","googleId","receiver","updatedAt","getConversationMessage","getUser","senderId","receiverId","getTime","time","style","Date","getHours","getMinutes","overflow","divider","Conversations","setUsers","setActiveUsers","fiteredData","filter","toLowerCase","includes","fetchData","current","emit","on","map","index","length","Divider","Menu","rightContainer","status","ChatHeader","person","activeUsers","find","userId","wrapper","maxWidth","wordBreak","own","Message","formatDate","date","createdAt","footer","bottom","clipIcon","transform","Footer","sendText","setValue","EmojiEmotions","AttachFile","onKeyPress","Mic","backgroundImage","backgroundSize","overflowY","Messages","conversation","messages","setMessages","incomingMessage","setIncomingMessage","scrollRef","useRef","setNewMessageFlag","now","_id","getMessageDetails","scrollIntoView","members","prev","member","code","keyCode","which","conversationId","ref","ChatBox","getConversationDetails","textAlign","breakpoints","down","image","title","subTitle","EmptyChat","leftComponent","minWidth","rightComponent","borderLeft","withStyles","dialogPaper","maxHeight","classname","Dialog","paper","BackdropProps","Object","keys","dialog","qr","marginBottom","fontFamily","list","lineHeight","showloginButton","onLoginSuccess","res","profileObj","List","ListItem","left","top","onSuccess","onFailure","cookiePolicy","isSignedIn","loginHeader","Messenger","AppBar","Toolbar"],"mappings":"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","file":"static/js/4.745d30bf.chunk.js","sourcesContent":["import { useContext } from \"react\";\r\nimport { Box, makeStyles, Typography } from \"@material-ui/core\"\r\n\r\nimport { AccountContext } from \"../../context/AccountProvider\";\r\n\r\nconst useStyles = makeStyles({\r\n    imageContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    profilePicture: {\r\n        width: 200,\r\n        height: 200,\r\n        borderRadius: '50%',\r\n        padding: '18px 0'\r\n    },\r\n    nameContainer: {\r\n        background: '#FFFFFF',\r\n        padding: '12px 30px 2px',\r\n        boxShadow: '0 1px 3px rgba(0, 0, 0, 0.08)',\r\n        '& :first-child': {\r\n            fontSize: 14   ,\r\n            color:'#009688' \r\n        },\r\n        '& :last-child': {\r\n            margin: '14px 0',\r\n            color: '#4A4A4A'\r\n        }\r\n    },\r\n    description: {\r\n        padding: '10px 20px 28px 30px',\r\n        '& > *': {\r\n            color: 'rgba(0, 0, 0, 0.45)',\r\n            fontSize: 12\r\n        }\r\n    }\r\n})\r\n\r\nconst Profile = () => {\r\n    const classes = useStyles();\r\n\r\n    const { account } = useContext(AccountContext);\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.imageContainer}>\r\n                <img src={account.imageUrl} alt=\"displaypicture\" className={classes.profilePicture} />\r\n            </Box>\r\n            <Box className={classes.nameContainer}>\r\n                <Typography></Typography>\r\n                <Typography>{account.name}</Typography>\r\n            </Box>\r\n            <Box className={classes.description}>\r\n                <Typography></Typography>\r\n            </Box>\r\n            <Box className={classes.nameContainer}>\r\n                <Typography></Typography>\r\n                <Typography></Typography>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useState } from 'react';\r\nimport { makeStyles, Drawer, Box, Typography } from '@material-ui/core';\r\nimport { ArrowBack } from '@material-ui/icons';\r\n\r\n//components\r\nimport Profile from './Profile';\r\n\r\nconst useStyles = makeStyles({\r\n  header: {\r\n    background: '#00bfa5',\r\n    height: 97,\r\n    color: '#FFFFFF',\r\n    display: 'flex',\r\n    '& > *': {\r\n      marginTop: 'auto',\r\n      padding: 15,\r\n      fontWeight: 600\r\n    }\r\n  },\r\n  component: {\r\n    background: '#ededed',\r\n    height: '85%'\r\n  } \r\n});\r\n\r\nconst InfoDrawer = ({ open, setOpen, profile }) => {\r\n  const classes = useStyles();\r\n  \r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer /*open={open}*/ onClose={handleClose}>\r\n      <Box className={classes.header}>\r\n        <ArrowBack onClick={() => setOpen(false)}/>\r\n        <Typography>Profile</Typography>\r\n      </Box>\r\n      <Box className={classes.component}>\r\n        { profile && <Profile /> }\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default InfoDrawer;","import { useState, useContext } from 'react';\r\nimport { MoreVert } from '@material-ui/icons';\r\nimport { Menu, MenuItem, makeStyles } from '@material-ui/core';\r\n\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\nimport { UserContext } from '../../../context/UserProvider';\r\n\r\nimport { clientId } from '../../../constants/data';\r\n\r\n//components\r\nimport InfoDrawer from '../../drawer/Drawer';\r\n\r\nconst useStyle = makeStyles({\r\n    menuItem: {\r\n        fontSize: 14,\r\n        padding: '15px 60px 5px 24px',\r\n        color: '#4A4A4A'\r\n    },\r\n    logout: {\r\n        border:'none!important', \r\n        boxShadow: 'none!important',\r\n        '& > *': {\r\n            padding: '0px!important'\r\n        }\r\n    }\r\n})\r\n\r\nconst HeaderMenu = () => {\r\n    const classes = useStyle();\r\n    \r\n    const [open, setOpen] = useState(false);\r\n    const [openDrawer, setOpenDrawer] = useState(false);\r\n    \r\n    const { setAccount, setShowloginButton, showlogoutButton, setShowlogoutButton } = useContext(AccountContext);\r\n    const { setPerson } = useContext(UserContext);\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setOpen(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(null);\r\n    };\r\n\r\n    const onSignoutSuccess = () => {\r\n        alert(\"You have been logged out successfully\");\r\n        console.clear();\r\n        setShowlogoutButton(false);\r\n        setShowloginButton(true);\r\n        setAccount('');\r\n        setPerson({});\r\n    };\r\n\r\n    const toggleDrawer = () => {\r\n        setOpenDrawer(true);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <MoreVert onClick={handleClick} />\r\n            <Menu\r\n                anchorEl={open}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n            >\r\n                {/* <MenuItem className={classes.menuItem} onClick={() => { handleClose(); toggleDrawer()}}>Profile</MenuItem> */}\r\n                <MenuItem className={classes.menuItem} onClick={() => { handleClose(); }}>\r\n                { showlogoutButton ?\r\n                    <GoogleLogout\r\n                        clientId={clientId}\r\n                        buttonText=\"Logout\"\r\n                        onLogoutSuccess={onSignoutSuccess}\r\n                        // className={classes.logout}\r\n                    >\r\n                    </GoogleLogout> : null\r\n                }\r\n                </MenuItem>\r\n            </Menu>\r\n            <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeaderMenu;\r\n","export const clientId = '474525669025-j07rmfjjj53hn0nts7beignva7gbvkdh.apps.googleusercontent.com'","import { useContext, useState } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport { Chat as MessageIcon } from '@material-ui/icons';\r\n\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\n//components\r\nimport HeaderMenu from './HeaderMenu';\r\nimport InfoDrawer from '../../drawer/Drawer';\r\n\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        height: 35,\r\n        background: '#ededed',\r\n        display: 'flex',\r\n        padding: '10px 16px',\r\n        alignItems: 'center'\r\n    },\r\n    chatIcons: {\r\n        marginLeft: 'auto',\r\n        '& > *': {\r\n            marginLeft: 2,\r\n            padding: 8,\r\n            color: '#919191'\r\n        },\r\n        '& :first-child': {\r\n            fontSize: 22,\r\n            marginRight: 8,\r\n            marginTop: 3\r\n        }\r\n    },\r\n    avatar: {\r\n        height: 37,\r\n        width: 37,\r\n        borderRadius: '50%'\r\n    }\r\n})\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    \r\n    const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n    const { account } = useContext(AccountContext);\r\n    \r\n    const toggleDrawer = () => {\r\n        setOpenDrawer(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.header}>\r\n                <img src={account.imageUrl} className={classes.avatar} onClick={() => toggleDrawer()} />\r\n                <Box className={classes.chatIcons}>\r\n                    <MessageIcon />\r\n                    <HeaderMenu/>\r\n                </Box>\r\n            </Box>\r\n            <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import { useState } from 'react';\r\nimport { Box, InputBase, makeStyles } from '@material-ui/core';\r\nimport { Search as SearchIcon } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    component: {\r\n        background: '#F6F6F6',\r\n        height: 43,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        transition: 'box-shadow .18s ease-out,background-color .25s ease-out'\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: 18,\r\n        backgroundColor: '#FFFFFF',\r\n        margin: '0 13px',\r\n        width: '100%'\r\n      },\r\n      searchIcon: {\r\n        color: '#919191',\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n      },\r\n      inputRoot: {\r\n        width: '100%'\r\n      },\r\n      inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: 65,\r\n        fontSize: 14,\r\n        height: 15,\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nconst Search = ({ setText }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box className={classes.component}>\r\n        <Box className={classes.search}>\r\n            <Box className={classes.searchIcon}>\r\n              <SearchIcon fontSize=\"small\"/>\r\n            </Box>\r\n            <InputBase\r\n              placeholder=\"Search a chat\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={(e) => setText(e.target.value)}\r\n            />\r\n          </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Search;","  \r\nimport axios from 'axios';\r\n\r\nconst url = 'http://localhost:8000';\r\n\r\nexport const addUser = async (data) => {\r\n    try {\r\n        let response = await axios.post(`${url}/add`, data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling addUser API ', error);\r\n    }\r\n}\r\n\r\nexport const getUsers = async () => {\r\n    try {\r\n        let response = await axios.get(`${url}/users`);\r\n        return response.data\r\n    } catch (error) {\r\n        console.log('Error while calling getUsers API ', error);\r\n    }\r\n}\r\n\r\nexport const setConversation = async (data) => {\r\n    try {\r\n        await axios.post(`${url}/conversation/add`, data);\r\n    } catch (error) {\r\n        console.log('Error while calling setConversation API ', error);\r\n    }\r\n}\r\n\r\nexport const getConversation = async (users) => {\r\n    try {\r\n        let response = await axios.post(`${url}/conversation/get`, users);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log('Error while calling getConversation API ', error);\r\n    }\r\n}\r\n\r\nexport const getMessages = async (id) => {\r\n    try {\r\n        let response = await axios.get(`${url}/message/get/${id}`);\r\n        return response.data\r\n    } catch (error) {\r\n        console.log('Error while calling getMessages API ', error);\r\n    }\r\n}\r\n\r\nexport const newMessages = async (data) => {\r\n    try {\r\n        return await axios.post(`${url}/message/add`, data);\r\n    } catch (error) {\r\n        console.log('Error while calling newConversations API ', error);\r\n    }\r\n}","import { useContext, useEffect, useState } from 'react'\r\nimport { makeStyles, Box, Typography } from \"@material-ui/core\";\r\n\r\nimport { UserContext } from '../../../context/UserProvider';\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\nimport { setConversation, getConversation } from '../../../service/api';\r\n\r\nconst useStyles = makeStyles({\r\n    component: {\r\n        height: 40,\r\n        display: 'flex',\r\n        padding: '13px 0',\r\n        cursor: 'pointer'\r\n    },\r\n    displayPicture: {\r\n        width: 50,\r\n        height: 50,\r\n        objectFit: 'cover',\r\n        borderRadius: '50%',\r\n        padding: '0 14px'\r\n    },\r\n    container: {\r\n        display: 'flex'\r\n    },\r\n    timestamp: {\r\n        fontSize: 12,\r\n        marginLeft: 'auto',\r\n        color: '#00000099',\r\n        marginRight: 20\r\n    },\r\n    text: {\r\n        display: 'block',\r\n        color: 'rgba(0, 0, 0, 0.6)',\r\n        fontSize: 14\r\n    }\r\n})\r\n\r\nconst Conversation = ({ user }) => {\r\n    const classes = useStyles();\r\n    const url = user.imageUrl || 'https://www.kindpng.com/picc/m/78-785827_user-profile-avatar-login-account-male-user-icon.png';\r\n    \r\n    const { setPerson } = useContext(UserContext);\r\n    const { account, socket, newMessageFlag }  = useContext(AccountContext);\r\n\r\n    const [message, setMessage] = useState({});\r\n\r\n    useEffect(() => {\r\n        const getConversationMessage = async() => {\r\n            const data = await getConversation({ sender: account.googleId, receiver: user.googleId });\r\n            setMessage({ text: data.message, timestamp: data.updatedAt });\r\n        }\r\n        getConversationMessage();\r\n    }, [newMessageFlag]);\r\n\r\n    const getUser = async () => {\r\n        setPerson(user);\r\n        await setConversation({ senderId: account.googleId, receiverId: user.googleId });\r\n    }\r\n\r\n    const getTime = (time) => {\r\n        return time < 10 ? '0' + time : time; \r\n    } \r\n\r\n    return (\r\n        <Box className={classes.component} onClick={() => getUser()}>\r\n            <Box>\r\n                <img src={url} alt=\"display picture\" className={classes.displayPicture} />\r\n            </Box>\r\n            <Box style={{width: '100%'}}>\r\n                <Box className={classes.container}>\r\n                    <Typography>{user.name}</Typography>\r\n                    { \r\n                        message.text && \r\n                        <Typography className={classes.timestamp}>\r\n                            {getTime(new Date(message.timestamp).getHours())}:{getTime(new Date(message.timestamp).getMinutes())}\r\n                        </Typography>        \r\n                    }\r\n                </Box>\r\n                <Box>\r\n                    <Typography className={classes.text}>{message.text}</Typography>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Conversation;","import { useState, useEffect, useContext, useRef } from 'react';\r\nimport { Box, makeStyles, Divider } from '@material-ui/core';\r\n\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\n//components\r\nimport Conversation from './Conversation';\r\nimport { getUsers } from '../../../service/api';\r\n\r\nconst useStyles = makeStyles({\r\n    component: {\r\n        overflow: 'overlay',\r\n        height: '81vh'\r\n    },\r\n    divider: {\r\n        margin: '0 0 0 67px',\r\n        backgroundColor: '#F2F2F2'\r\n    }\r\n})\r\n\r\nconst Conversations = ({ text }) => {\r\n    const classes = useStyles();\r\n    const [users, setUsers] = useState([]);\r\n    \r\n    const { account, socket, setActiveUsers } = useContext(AccountContext);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let data = await getUsers();\r\n            let fiteredData = data.filter(user => user.name.toLowerCase().includes(text.toLowerCase()));\r\n            setUsers(fiteredData);\r\n            //setUsers(data);\r\n        }\r\n        fetchData();\r\n    }, [text]);\r\n\r\n    useEffect(() => {\r\n        socket.current.emit('addUser', account.googleId);\r\n        socket.current.on(\"getUsers\", users => {\r\n            setActiveUsers(users);\r\n        })\r\n    }, [account])\r\n\r\n    return (\r\n        <Box className={classes.component}>\r\n            {\r\n                users && users.map((user, index) => (\r\n                    user.googleId !== account.googleId && \r\n                        <>\r\n                            <Conversation user={user} />\r\n                            {\r\n                                users.length !== (index + 1)  && <Divider className={classes.divider} />\r\n                            }\r\n                        </>\r\n                ))\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Conversations;","import { useState } from 'react';\r\nimport { Box } from '@material-ui/core';\r\n\r\n//components\r\nimport Header from './Header';\r\nimport Search from './Search';\r\nimport Conversations from './Conversations';\r\n\r\nconst Menu = () => {\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <Box>\r\n            <Box>\r\n                <Header/>\r\n                <Search setText={setText} />\r\n                <Conversations text={text} />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Menu;","import { useContext } from 'react';\r\nimport { Box, Typography, makeStyles } from '@material-ui/core';\r\nimport { Search, MoreVert } from '@material-ui/icons';\r\n\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        height: 35,\r\n        background: '#ededed',\r\n        display: 'flex',\r\n        padding: '10px 16px',\r\n        borderRadius: 25,\r\n        alignItems: 'center'\r\n    },\r\n    displayPicture: {\r\n        width: 37,\r\n        height: 37,\r\n        objectFit: 'cover',\r\n        borderRadius: '50%',\r\n        padding: '0 2px'\r\n    },\r\n    name: {\r\n        marginLeft: 10\r\n    },\r\n    rightContainer: {\r\n        marginLeft: 'auto',\r\n        '& > *': {\r\n            padding: 8,\r\n            fontSize: 22,\r\n            color: '#919191'\r\n        }\r\n    },\r\n    status: {\r\n        fontSize: 12,\r\n        color: 'rgb(0, 0, 0, 0.6)',\r\n        marginLeft: 10\r\n    }\r\n});\r\n\r\nconst ChatHeader = ({ person }) => {\r\n    const classes = useStyles();    \r\n\r\n    const url = person.imageUrl; //|| 'https://static.straitstimes.com.sg/s3fs-public/articles/2020/12/01/af_moneyheist_011220.jpg';\r\n    \r\n    const { activeUsers } = useContext(AccountContext);\r\n\r\n    console.log(activeUsers);\r\n\r\n    return (\r\n        <Box className={classes.header}>\r\n            <img src={url} alt=\"display picture\" className={classes.displayPicture} />     \r\n            <Box>\r\n                <Typography className={classes.name}>{person.name}</Typography>   \r\n                <Typography className={classes.status}>\r\n                    {activeUsers?.find(user => user.userId === person.googleId) ? 'Online' : 'Offline'}\r\n                </Typography>    \r\n            </Box>   \r\n            <Box className={classes.rightContainer}>\r\n                <Search />\r\n                <MoreVert />    \r\n            </Box> \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatHeader;","import { useContext } from 'react';\r\n\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\nconst useStyles = makeStyles({\r\n    wrapper: {\r\n        background: '#FFFFFF',\r\n        padding: 5,\r\n        maxWidth: '60%',\r\n        width: 'fit-content',\r\n        display: 'flex',\r\n        borderRadius: 10,\r\n        wordBreak: 'break-word'\r\n    },\r\n    own: {\r\n        background: '#dcf8c6',\r\n        padding: 5,\r\n        maxWidth: '60%',\r\n        width: 'fit-content',\r\n        marginLeft: 'auto',\r\n        display: 'flex',\r\n        borderRadius: 10,\r\n        wordBreak: 'break-word'\r\n    },\r\n    text: {\r\n        fontSize: 14,\r\n        padding: '0 25px 0 5px'\r\n    },\r\n    time: {\r\n        fontSize: 10,\r\n        color: '#919191',\r\n        marginTop: 6,\r\n        wordBreak: 'keep-all',\r\n        marginTop: 'auto'\r\n    }\r\n})\r\n\r\nconst Message = ({ message }) => {\r\n    const classes = useStyles();\r\n    const { account } = useContext(AccountContext);\r\n\r\n    const formatDate = (date) => {\r\n        return date < 10 ? '0' + date : date;\r\n    }\r\n\r\n    return (\r\n        <Box className={account.googleId === message.sender ? classes.own : classes.wrapper}>\r\n            <Typography className={classes.text}>{message.text}</Typography>\r\n            <Typography className={classes.time}>\r\n                {formatDate(new Date(message.createdAt).getHours())}:{formatDate(new Date(message.createdAt).getMinutes())}\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Message;","import { useState } from 'react';\r\nimport { EmojiEmotions, AttachFile, Mic } from '@material-ui/icons';\r\nimport { Box, makeStyles, InputBase } from '@material-ui/core';\r\n\r\n//components\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        height: '55px',\r\n        background: '#ededed',\r\n        // position: 'absolute',\r\n        width: '100%',\r\n        bottom: 0,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '0 15px',\r\n        '&  >*': {\r\n            margin: 5,\r\n            color: '#919191'\r\n        }\r\n    },\r\n    search: {\r\n        borderRadius: 18,\r\n        backgroundColor: '#FFFFFF',\r\n        width: 'calc(94% - 100px)'\r\n    },\r\n    inputRoot: {\r\n        width: '100%'\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: 25,\r\n        fontSize: 14,\r\n        height: 20,\r\n        width: '100%'\r\n    },\r\n    clipIcon: {\r\n        transform: 'rotate(40deg)'\r\n    }\r\n}));\r\n\r\n\r\nconst Footer = ({ sendText, value, setValue }) => {\r\n    const classes = useStyles();\r\n    \r\n\r\n    return (\r\n        <Box className={classes.footer}>\r\n            <EmojiEmotions />\r\n            <AttachFile className={classes.clipIcon} />\r\n\r\n            <Box className={classes.search}>\r\n                <InputBase\r\n                    placeholder=\"Type a message\"\r\n                    classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                    }}\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    onKeyPress={(e) => sendText(e)}\r\n                    value={value}\r\n                />\r\n            </Box>\r\n\r\n            <Mic />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { useState, useEffect, useContext, useRef } from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\n\r\nimport { io } from 'socket.io-client';\r\n\r\nimport { getMessages, newMessages } from '../../../service/api';\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\n\r\n//components\r\nimport Message from './Message';\r\nimport Footer from './Footer';\r\n\r\nconst useStyles = makeStyles({\r\n    wrapper: {\r\n        backgroundImage: `url(${'https://i.redd.it/rgm4jlptlv111.jpg'})`,\r\n        // height: 'calc(100% - 114px)',\r\n        backgroundSize: '100%'\r\n    },\r\n    footer: {\r\n        height: '55px',\r\n        background: '#ededed',\r\n        // position: 'absolute',\r\n        width: '100%',\r\n        // bottom: 0\r\n    },\r\n    component: {\r\n        height: '79vh',\r\n        overflowY: 'scroll'\r\n    },\r\n    container: {\r\n        padding: '1px 80px'\r\n    }\r\n})\r\n\r\n\r\nconst Messages = ({ person, conversation }) => {\r\n    const classes = useStyles();\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [incomingMessage, setIncomingMessage] = useState(null);\r\n    const [value, setValue] = useState();\r\n\r\n    const scrollRef = useRef();\r\n\r\n    const { account, socket, newMessageFlag, setNewMessageFlag } = useContext(AccountContext);\r\n\r\n    useEffect(() => {\r\n        \r\n        socket.current.on('getMessage', data => {\r\n            setIncomingMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: Date.now()\r\n            })\r\n        })\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        const getMessageDetails = async () => {\r\n            let data = await getMessages(conversation._id);\r\n            setMessages(data);\r\n        }\r\n        getMessageDetails();\r\n    }, [conversation?._id, person._id, newMessageFlag]);\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ transition: \"smooth\" })\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        incomingMessage && conversation?.members?.includes(incomingMessage.sender) && \r\n            setMessages((prev) => [...prev, incomingMessage]);\r\n        \r\n    }, [incomingMessage, conversation]);\r\n\r\n    const receiverId = conversation?.members?.find(member => member !== account.googleId);\r\n    \r\n    const sendText = async (e) => {\r\n        let code = e.keyCode || e.which;\r\n        if(!value) return;\r\n\r\n        if(code === 13) { \r\n            let message = {\r\n                sender: account.googleId,\r\n                conversationId: conversation._id,\r\n                text: value\r\n            };\r\n\r\n            socket.current.emit('sendMessage', {\r\n                senderId: account.googleId,\r\n                receiverId,\r\n                text: value\r\n            })\r\n\r\n            await newMessages(message);\r\n\r\n            setValue('');\r\n            setNewMessageFlag(prev => !prev);\r\n        } \r\n    }\r\n\r\n    return (\r\n        <Box className={classes.wrapper}>\r\n            <Box className={classes.component}>\r\n                {\r\n                    messages && messages.map(message => (\r\n                        <Box className={classes.container} ref={scrollRef}>\r\n                            <Message message={message} />\r\n                        </Box>\r\n                    ))\r\n                }\r\n            </Box>\r\n            <Footer sendText={sendText} value={value} setValue={setValue} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Messages;","import { useContext, useState, useEffect } from 'react';\r\nimport { Box } from '@material-ui/core';\r\n\r\nimport { UserContext } from '../../../context/UserProvider';\r\nimport { AccountContext } from '../../../context/AccountProvider';\r\nimport { getConversation, newMessages } from '../../../service/api';\r\n\r\n//components\r\nimport ChatHeader from './ChatHeader';\r\nimport Messages from './Messages';\r\n\r\nconst ChatBox = () => {\r\n    const { person, setPerson } = useContext(UserContext);\r\n    const { account } = useContext(AccountContext);\r\n\r\n    const [conversation, setConversation] = useState({});\r\n    \r\n    useEffect(() => {\r\n        const getConversationDetails = async () => {\r\n            let data = await getConversation({ sender: account.googleId, receiver: person.googleId });\r\n            setConversation(data);\r\n        }\r\n        getConversationDetails();\r\n    }, [person.googleId]);\r\n\r\n    return (\r\n        <Box style={{height: '75%'}}>\r\n            <ChatHeader person={person} />\r\n            <Messages person={person} conversation={conversation} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatBox;","\r\nimport { Box, makeStyles, Typography, Divider } from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    component: {\r\n        background: '#f8f9fa',\r\n        padding: '50px 0',\r\n        textAlign: 'center',\r\n        height: '100%'\r\n    },\r\n    container: {\r\n        padding: '0 200px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: -0\r\n        }\r\n    },\r\n    image: {\r\n        width: 320,\r\n        display: 'none'\r\n    },\r\n    title: {\r\n        fontSize: 36,\r\n        fontWeight: 300,\r\n        color: '#525252',\r\n        marginTop: 25\r\n    },\r\n    subTitle: {\r\n        marginTop: 10,\r\n        fontSize: 14,\r\n        color: 'rgba(0, 0, 0, 0.45)'\r\n    },\r\n    divider: {\r\n        margin: '30px 0'\r\n    }\r\n}));\r\n\r\nconst EmptyChat = () => {\r\n    const classes = useStyle();\r\n    const url = '';\r\n\r\n    return (\r\n        <Box className={classes.component}>\r\n            <Box className={classes.container}>\r\n                <img src={url} alt=\"dp\" className={classes.image} />\r\n                <Typography className={classes.title}>No chat selected</Typography>\r\n                <Typography className={classes.subTitle}>Your messages are end-to-end encrypted, nobody can see your messages other than\r\n                 you and the receiver.\r\n                </Typography>\r\n                <Typography className={classes.subTitle}>Made with 💖 by NMIMS Students</Typography>\r\n                <Divider className={classes.divider} />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default EmptyChat;","import { useContext } from 'react';\r\nimport { Dialog, makeStyles, withStyles, Box } from '@material-ui/core';\r\n\r\nimport { UserContext } from '../../context/UserProvider';\r\n\r\n//components\r\nimport Menu from './menu/Menu';\r\nimport ChatBox from './chat/ChatBox';\r\nimport EmptyChat from './chat/EmptyChat';\r\n\r\nconst useStyles = makeStyles({\r\n    component: {\r\n        display: 'flex'\r\n    },\r\n    leftComponent: {\r\n        minWidth: 380\r\n    },\r\n    rightComponent: {\r\n        width: '70%',\r\n        minWidth: 300,\r\n        height: '100%',\r\n        borderLeft: '1px solid rgba(0, 0, 0, 0.14)'\r\n    }\r\n})\r\n\r\nconst style = {\r\n    dialogPaper: {\r\n        height: '95%',\r\n        width: '91%',\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n        borderRadius: 25,\r\n        boxShadow: 'none',\r\n        overflow: 'hidden'\r\n    }\r\n};\r\n\r\nconst ChatDialog = ({ classes }) => {\r\n    const classname = useStyles();\r\n\r\n    const { person } = useContext(UserContext);\r\n    \r\n    return (\r\n        <Dialog \r\n            open={true} \r\n            classes={{paper: classes.dialogPaper}} \r\n            BackdropProps={{style: {backgroundColor: 'unset'}}}\r\n        >\r\n            <Box className={classname.component}>\r\n                <Box className={classname.leftComponent}>\r\n                    <Menu/>\r\n                </Box>\r\n                <Box className={classname.rightComponent}>\r\n                    {\r\n                        Object.keys(person).length  ? <ChatBox/> : <EmptyChat />\r\n                    }\r\n                </Box>\r\n            </Box>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(style)(ChatDialog);","import { useState, useEffect, useContext } from 'react';\r\nimport { Dialog } from '@material-ui/core';\r\nimport { makeStyles, Typography, List, ListItem, Box, withStyles } from '@material-ui/core';\r\n\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n\r\nimport { addUser } from '../../service/api';\r\nimport { AccountContext } from '../../context/AccountProvider';\r\n\r\nconst useStyle = makeStyles({\r\n    component: {\r\n        display: 'flex'\r\n    },\r\n    dialog: {\r\n        padding: '56px 0 56px 56px',\r\n    },\r\n    qr: {\r\n        // margin: '50px 0 0 50px',\r\n        // height: 264,\r\n        // width: 264,\r\n        display: 'none'\r\n    },\r\n    title: {\r\n        fontSize: 26,\r\n        marginBottom: 25,\r\n        color: '#525252',\r\n        fontFamily: 'Segoe UI,Helvetica Neue,Helvetica,Lucida Grande,Arial,Ubuntu,Cantarell,Fira Sans,sans-serif',\r\n        fontWeight: 300   \r\n    },\r\n    list: {\r\n        '&  > *': {\r\n            padding: 0,\r\n            marginTop: 15,\r\n            fontSize: 18,\r\n            lineHeight: '28px',\r\n            color: '#4a4a4a'\r\n        }\r\n    }\r\n})\r\n\r\nconst style = {\r\n    dialogPaper: {\r\n        marginTop: '12%',\r\n        height: '95%',\r\n        width: '60%',\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n        borderRadius: 25,\r\n        // boxShadow: 'none',\r\n        overflow: 'hidden'\r\n    }\r\n};\r\n\r\nconst LoginDialog = ({ classes }) => {\r\n    const classname = useStyle();\r\n    const clientId = '474525669025-j07rmfjjj53hn0nts7beignva7gbvkdh.apps.googleusercontent.com';\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const { account, setAccount,showloginButton, setShowloginButton, showlogoutButton, setShowlogoutButton } = useContext(AccountContext);\r\n\r\n    const onLoginSuccess = async (res) => {\r\n        console.log('Login Success:', res.profileObj);\r\n        setAccount(res.profileObj);\r\n        setShowloginButton(false);\r\n        setShowlogoutButton(true);\r\n        await addUser(res.profileObj);\r\n    };\r\n\r\n    const onLoginFailure = (res) => {\r\n        console.log('Login Failed:', res);\r\n    };\r\n\r\n    const onSignoutSuccess = () => {\r\n        alert(\"You have been logged out successfully\");\r\n        console.clear();\r\n        setShowloginButton(true);\r\n        setShowlogoutButton(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOpen(true);\r\n    }, [])\r\n\r\n    const url = '';\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={handleClose}\r\n            open={true}\r\n            classes={{paper: classes.dialogPaper}} \r\n            BackdropProps={{style: {backgroundColor: 'unset'}}}\r\n        >\r\n            <Box className={classname.component}>\r\n                <Box className={classname.dialog}>\r\n                    <Typography className={classname.title}>End-to-end encrypted messenger</Typography>\r\n                    <List className={classname.list}>\r\n                        <ListItem>1. Login through your Google Account.</ListItem>\r\n                        <ListItem>2. And you're good to go.</ListItem>\r\n                        <ListItem>*Your google account is only used to authenticate you,</ListItem>\r\n                        <ListItem>we only store your name, email, and display picture.</ListItem>\r\n                    </List>\r\n                </Box>\r\n                <Box style={{position:'relative'}}>\r\n                    <img src={url} alt=\" \" className={classname.qr} />\r\n                    <div style={{position: 'absolute', left: '50%', top: '50%', transform: 'translateX(270%) translateY(-25%)'}}>\r\n                        { showloginButton ?\r\n                            <GoogleLogin\r\n                                clientId={clientId}\r\n                                buttonText=\"\"\r\n                                onSuccess={onLoginSuccess}\r\n                                onFailure={onLoginFailure}\r\n                                cookiePolicy={'single_host_origin'}\r\n                                isSignedIn={true}\r\n                            /> : null}\r\n\r\n                        { showlogoutButton ?\r\n                            <GoogleLogout\r\n                                clientId={clientId}\r\n                                buttonText=\"\"\r\n                                onLogoutSuccess={onSignoutSuccess}\r\n                            >\r\n                            </GoogleLogout> : null\r\n                        }\r\n                    </div>\r\n                </Box>\r\n            </Box>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default withStyles(style)(LoginDialog);","import { useContext } from 'react';\r\nimport { AppBar, Toolbar, makeStyles, Box } from '@material-ui/core';\r\n\r\nimport { AccountContext } from '../context/AccountProvider';\r\n\r\n//components\r\nimport ChatDialog from './chat/ChatDialog';\r\nimport LoginDialog from './account/LoginDialog';\r\n\r\nconst useStyles = makeStyles({\r\n    component: {\r\n        height: '100vh',\r\n        background: '#DCDCDC'\r\n    },\r\n    header: {\r\n        // background: '#128C7E',\r\n        background: '#0080ff',\r\n        height: 115,\r\n        boxShadow: 'none'\r\n    },\r\n    loginHeader: {\r\n        // background: '#00bfa5',\r\n        background: '#0080ff',\r\n        height: 200,\r\n        boxShadow: 'none'\r\n    }\r\n})\r\n\r\nconst Messenger = () => {\r\n    const classes = useStyles();\r\n    const { account } = useContext(AccountContext);\r\n    return (\r\n        <Box className={classes.component}>\r\n            <AppBar className={account ? classes.header : classes.loginHeader}>\r\n                <Toolbar>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            {\r\n                account ? <ChatDialog /> : <LoginDialog />\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Messenger;"],"sourceRoot":""}